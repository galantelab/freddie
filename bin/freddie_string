#!/usr/bin/env bash

# TODO: Remove fastq and use all BAMs as arguments

## Annotation gencode
## Prefix
## Bams files
## freddie string -p K562_short -f files.txt -t 8 -e long -g <gtf/path>

# Bash pragmas
set -o errexit
set -o pipefail
set -o nounset

# Where I am
BIN_DIR="$(cd $(dirname $(readlink -f "${BASH_SOURCE[0]}")) && pwd)"

# Load common lib
source "$BIN_DIR/../lib/freddie_common"

# My name
SCRIPT_NAME="$(basename "$0")"

# Command name
CMD_NAME="${SCRIPT_NAME#${PROG_NAME}_}"

usage() {
	echo "$PROG_NAME $VERSION"
	echo "$PROG_NAME $CMD_NAME (aka $SCRIPT_NAME)"
	echo "Usage: $PROG_NAME $CMD_NAME [options]"
}

validate_opt() {
	if [[ ! "$experiment" =~ ^(short|long)$ ]]; then
		error "'$experiment' is not a valid '-e' option\n$(try_help)"
	fi

	if [[ ! "$threads" =~ ^[0-9]+$ ]] || [[ "$threads" -lt 1 ]]; then
		error "'$threads' is not a valid '-t' option\n$(try_help)"
	fi

	# Mandatory options '-g' and '-f'
	if [[ -z "$gtf" ]]; then
		error "Missing '-g' option\n$(try_help)"
	fi

	if [[ -z "$fastq" ]]; then
		error "Missing '-f' option\n$(try_help)"
	fi

	if [[ ! -f "$gtf" ]]; then
		error "No such file '$gtf'"
	fi

	if [[ ! -f "$fastq" ]]; then
		error "No such file '$fastq'"
	fi
}

validate_dep() {
	echo "Validate dependencies from prev cmd"
}

# Options
prefix="out"
output_dir="."
threads=1
experiment="short"
fastq="" # Os BAMS estão em fastq?
gtf="" # Pode ser gtff?

# Processed options
paramet=""
jobs=1

[[ $# == 0 ]] && { usage; exit; }

while getopts ":ho:p:t:e:g:f:" OPTION; do
	case "$OPTION" in
		h)
			usage
			exit
			;;
		o)
			output_dir="$OPTARG"
			;;
		p)
			prefix="$OPTARG"
			;;
		t)
			threads="$OPTARG"
			;;
		e)
			experiment="$OPTARG"
			;;
		g)
			gtf="$OPTARG"
			;;
		f)
			fastq="$OPTARG"
			;;
		?)
			error "No such option '-$OPTARG'\n$(try_help)"
			;;
	esac
done

# Check for errors
validate_opt
#validate_dep

# MAIN

if [[ "$experiment" == "long" ]]; then
	paramet="-L -a 3"
fi

# Se for == 1? A divisão será 0?
jobs=$(awk -v threads=$threads '{print int(threads/2)}' <(echo "."))

# Just in case
mkdir -p "$output_dir"

log_info 'Running Stringtie'
for i in $(cat ${fastq}); do
	echo "stringtie $i.bam $paramet -G $gtf -p 2 -o $output_dir/${prefix}.${i/*\/}.gtf"
done | parallel -j $jobs

log_info 'Joining gtfs'
stringtie --merge \
	-p $threads \
	-G "$gtf" \
	-o "$output_dir/$prefix.merge.gtf" \
	"$output_dir/${prefix}".*.gtf

log_info "Done"
