# vim:ft=sh

# Environment variables

## Set locale
export LC_ALL=C

# Global variables

## Say my name
PROG_NAME='freddie'

## Our current version
VERSION='1.0.0-dev6'

# Log functions

## Print: date info|error script [func]: message
_log_template() {
	local type="$1"; shift
	local time=$(date '+%Y.%m.%d-%H.%M.%S')
	echo -e "$time $type $PROG_NAME [${CMD_NAME:-main}]: $@" >&2
}

## Just call _log_template with type 'info'
log_info() {
	_log_template 'info' "$@"
}

## Just call _log_template with type 'info'
log_warn() {
	_log_template 'warn' "$@"
}

## Call _log_template and die
log_error() {
	_log_template 'error' "$@"
	exit 1
}

# Display functions

## Print: script func: message
_template() {
	local name="$PROG_NAME"
	[[ -n "$CMD_NAME" ]] && name+=" $CMD_NAME"
	echo -e "$name: $@" >&2
}

## Print message to stderr
warn() {
	_template "$@"
}

## Print message to stderr and die
error() {
	_template "$@"
	exit 1
}

# Print to stderr a message and the string
# Try help 'porg cmd -h'  for more information
# After that die
try_help() {
	if [[ -v CMD_NAME ]]; then
		echo "Try '$PROG_NAME $CMD_NAME -h' for more information"
	else
		echo "Try '$PROG_NAME -h' for more information"
	fi
}

# Warn if we received a signal to exit
exit_on_signal() {
	log_warn "Received signal '$1'. Exiting ..."
	exit 255
}

for sig in SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM; do
	trap "exit_on_signal $sig" $sig
done
