#!/usr/bin/env bash

# Bash pragmas
set -o errexit
set -o pipefail
set -o nounset

# Where I am
ROOT_DIR="$(cd $(dirname $(readlink -f "${BASH_SOURCE[0]}")) && pwd)"

# Load common lib
source "$ROOT_DIR/lib/freddie_common"

usage() {
	echo "$PROG_NAME $VERSION"
	echo ""
	echo "Usage: $PROG_NAME [-hv]"
	echo "Usage: $PROG_NAME <command> [options]"
	echo ""
	echo "Options:"
	echo "  -h          Print this help"
	echo "  -v          Print current version"
	echo ""
	echo "Commands:"
	echo "  string      Run StringTie2"
	echo "  chimeric    Finding potential chimeric"
	echo "              transcripts"
	echo "  coding      Estimates the possibility"
	echo "              of a chimeric transcript"
	echo "              being coding"
	echo "  pfam        Analyzes the domains of the"
	echo "              sequences generated in"
	echo "              relation to the host"
	echo "              transcript"
	echo "  expression  Measurement of transcript"
	echo "              expression by kallisto"
	echo "  results     Compile results from the"
	echo "              previous steps"
	echo ""
}

parse_opt() {
	while getopts ":hv" OPTION; do
		case "$OPTION" in
			h)
				usage
				exit
				;;
			v)
				echo "$VERSION"
				exit
				;;
			?)
				error "No such option '-$OPTARG'\n$(try_help)"
				;;
		esac
	done
}

parse_cmd() {
	local cmd="$1"; shift

	case "$cmd" in
		string)     ;;
		chimeric)   ;;
		coding)     ;;
		pfam)       ;;
		expression) ;;
		results)    ;;
		*)
			error "'$cmd' is not a valid command\n$(try_help)"
			;;
	esac

	exec "$ROOT_DIR/bin/${PROG_NAME}_${cmd}" "$@"
}

[[ $# == 0 ]] && { usage; exit; }

if [[ "$1" =~ ^- ]]; then
	parse_opt "$@"
else
	parse_cmd "$@"
fi
